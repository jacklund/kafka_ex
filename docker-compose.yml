version: '2.4'

services:
  zookeeper:
    image: zookeeper
    restart: on-failure
    ports:
      - "2181:2181"
    environment:
      - ZOO_4LW_COMMANDS_WHITELIST=ruok
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 127.0.0.1 2181 | grep -q imok"]
      interval: 5s
      timeout: 10s
      retries: 15
      start_period: 10s

  kafka1:
    hostname: kafka1
    image: docker.io/bitnami/kafka:3.1
    ports:
      - "9093:9093"
    volumes:
      - './ssl/server.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro'
      - './ssl/server.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro'
      - ./scripts/kafka_check_health:/kafka_check_health
    env_file: docker-compose-kafka.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_PORT: "9093"
      KAFKA_PORT: "9092"
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_HOST_NAME: kafka1
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://localhost:9093
      KAFKA_CFG_LISTENERS: INSIDE://:9092,OUTSIDE://:9093

    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      # test: /kafka_check_health
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka2:
    hostname: kafka2
    image: docker.io/bitnami/kafka:3.1
    ports:
      - "9094:9094"
    volumes:
      - './ssl/server.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro'
      - './ssl/server.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro'
      - ./scripts/kafka_check_health:/kafka_check_health
    env_file: docker-compose-kafka.env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_PORT: "9094"
      KAFKA_PORT: "9092"
      KAFKA_HOST_NAME: kafka2
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka2:9092,OUTSIDE://localhost:9094
      KAFKA_CFG_LISTENERS: INSIDE://:9092,OUTSIDE://:9094

    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka3:
    hostname: kafka3
    image: docker.io/bitnami/kafka:3.1
    ports:
      - "9095:9095"
    volumes:
      - './ssl/server.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro'
      - './ssl/server.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro'
      - ./scripts/kafka_check_health:/kafka_check_health
    env_file: docker-compose-kafka.env
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_PORT: 9095
      KAFKA_PORT: "9092"
      KAFKA_HOST_NAME: kafka3
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka3:9092,OUTSIDE://localhost:9095
      KAFKA_CFG_LISTENERS: INSIDE://:9092,OUTSIDE://:9095
    healthcheck:
      # test: /kafka_check_health
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 10s
    depends_on:
      zookeeper:
        condition: service_healthy

  # This is a dummy service that forces all other services to be healthy before
  # docker-compose up can be considered successful.
  ready:
    image: busybox:1.31-musl
    command: tail -f /dev/null
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
